apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "6"
  generation: 7
  labels:
    app: prometheus
    plugin: prometheus
  name: prometheus
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      plugin: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus
        plugin: prometheus
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yaml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention=7d
        - --log.level=info
        - --web.enable-lifecycle
        command:
        - /bin/prometheus
        image: harbor.enncloud.cn/enncloud/prometheus:2.0
        imagePullPolicy: Always
        name: prometheus
        ports:
        - containerPort: 9090
          protocol: TCP
        resources:
          limits:
            cpu: "2"
            memory: 3000Mi
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /prometheus
          name: data
        - mountPath: /etc/prometheus
          name: config-volume
        - mountPath: /etc/prometheus_rules
          name: rules-volume
      - args:
        - 'while inotifywait -qq -e modify,create,delete /etc/prometheus_rules/..data/;
          do sh -c  "curl -X POST http://localhost:9090/-/reload"; done; '
        image: harbor.enncloud.cn/tenx_containers/inotify:1.0
        imagePullPolicy: Always
        name: notify
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus_rules
          name: rules-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /paas/prometheus_data
        name: data
      - configMap:
          defaultMode: 420
          name: prometheus-config
        name: config-volume
      - configMap:
          defaultMode: 420
          name: prometheus-rules
        name: rules-volume

